package com.tj.ex.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Timestamp;
import java.util.ArrayList;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;

import com.tj.ex.dto.BoardDto;

public class BoardDao {
	private DataSource ds;
	public BoardDao() {
		try {
			Context ctx = new InitialContext();
			ds = (DataSource)ctx.lookup("java:comp/env/jdbc/Oracle11g");
		} catch (NamingException e) {
			System.out.println(e.getMessage());
		}
	}
	// 글목록(sr~er)
	public ArrayList<BoardDto> list(int startrow, int endrow){
		ArrayList<BoardDto> dtos = new ArrayList<BoardDto>();
		Connection		  conn  = null;
		PreparedStatement pstmt = null;
		ResultSet		  rs	= null;
		String sql = "SELECT * FROM (SELECT ROWNUM RN, A.* FROM " +
					"(SELECT * FROM MVC_BOARD ORDER BY bGROUP DESC, bSTEP) A) WHERE RN BETWEEN ? AND ?";
		try {
			conn = ds.getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, startrow);
			pstmt.setInt(2, endrow);
			rs = pstmt.executeQuery();
			while(rs.next()) {
				int 		bid       = rs.getInt	("bid     "	);
				String 		bname     = rs.getString("bname   "	);
				String 		btitle    = rs.getString("btitle  "	);
				String 		bcontent  = rs.getString("bcontent"	);
				Timestamp 	bdate     = rs.getTimestamp("bdate   "	);
				int 		bhit      = rs.getInt	("bhit    "	);
				int 		bgroup    = rs.getInt	("bgroup  "	);
				int 		bstep     = rs.getInt	("bstep   "	);
				int 		bindent   = rs.getInt	("bindent "	);
				String 		bip       = rs.getString("bip     "	);
				dtos.add(new BoardDto(bid, bname, btitle, bcontent, bdate, bhit, bgroup, bstep, bindent, bip));
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		} finally {
			try {
				if(rs	 != null) rs	.close();
				if(pstmt != null) pstmt .close();
				if(conn  != null) conn  .close();
			} catch (Exception e2) {
				System.out.println(e2.getMessage());
			}
		}
		return dtos;
	}
	// 글갯수
	public int getBoardTotCnt() {
		int totCnt = 0;
		Connection		  conn  = null;
		PreparedStatement pstmt = null;
		ResultSet		  rs	= null;
		String sql = "SELECT COUNT(*) FROM MVC_BOARD";
		try {
			conn = ds.getConnection();
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			if(rs.next()) {
				totCnt = rs.getInt(1);
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		} finally {
			try {
				if(rs	 != null) rs	.close();
				if(pstmt != null) pstmt .close();
				if(conn  != null) conn  .close();
			} catch (Exception e2) {
				System.out.println(e2.getMessage());
			}
		}
		return totCnt;
	}
	// 글쓰기 btitle, bname, bcontent, bip
	public int write(String bname, String btitle, String bcontent, String bip) {
		int result = 0;
		Connection		  conn  = null;
		PreparedStatement pstmt = null;
		String sql = "INSERT INTO MVC_BOARD (bID,bNAME,bTITLE,bCONTENT,bGROUP,bSTEP,bINDENT,bIP) " + 
					 "VALUES (MVC_BOARD_SEQ.NEXTVAL, ?, ?,?,MVC_BOARD_SEQ.CURRVAL,0,0,?)";
		try {
			conn = ds.getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, bname	);
			pstmt.setString(2, btitle	);
			pstmt.setString(3, bcontent	);
			pstmt.setString(4, bip		);
			result = pstmt.executeUpdate();
		} catch (Exception e) {
			System.out.println(e.getMessage());
		} finally {
			try {
				if(pstmt != null) pstmt .close();
				if(conn  != null) conn  .close();
			} catch (Exception e2) {
				System.out.println(e2.getMessage());
			}
		}
		return result;
	}
	// 조회수 증가
	public void hitup(int bid) {
		Connection		  conn  = null;
		PreparedStatement pstmt = null;
		String sql ="UPDATE MVC_BOARD SET bHIT = bHIT+1 WHERE bID=?";
		try {
			conn = ds.getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, bid);
		} catch (Exception e) {
			System.out.println(e.getMessage());
		} finally {
			try {
				if(pstmt != null) pstmt .close();
				if(conn  != null) conn  .close();
			} catch (Exception e2) {
				System.out.println(e2.getMessage());
			}
		}
	}
	// 글상세 보기(조회수 증가 포함)
	public BoardDto contentView(int bid) {
		hitup(bid);
		BoardDto dto = null;
		Connection		  conn  = null;
		PreparedStatement pstmt = null;
		ResultSet		  rs	= null;
		String sql = "SELECT * FROM MVC_BOARD WHERE BID=?";
		return dto;
	}
	// 답변글 쓰기 위해 원글 정보 가져오기
	
	// stepA
	
	// 답변글 쓰기
	
	// 글 수정
	
	// 글 삭제
}
